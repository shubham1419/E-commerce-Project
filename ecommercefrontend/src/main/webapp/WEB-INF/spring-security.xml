<!-- <beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

	<http> only admin access <intercept-url pattern="/manage/**" access="hasAuthority('ADMIN')" 
		/> only user access (who is registered) <intercept-url pattern="/cart/**" 
		access="hasAuthority('USER')" /> rest of the world <intercept-url pattern="/**" 
		access="permitAll" /> <form-login login-page="/login" /> <access-denied-handler 
		error-page="/access-denied"/> </http>



	<http>

		<intercept-url pattern="/**" access="hasRole('USER')" />
		<form-login />
		<logout />
	</http>
 <authentication-manager>
		<authentication-provider>
 			<user-service>
 			<user name ="shubham" password="123456" authorities="ROLE_USER, ROLE_ADMIN" />
 			</user-service>
 		</authentication-provider>
	</authentication-manager>


	<authentication-manager>
		<authentication-provider>
 			<password-encoder ref="passwordEncoder" />
 			<jdbc-user-service data-source-ref="dataSource"
 				authorities-by-username-query="select email, role from user_detail where email = ?"
 				users-by-username-query="select email, password, enabled from user_detail where email = ?"
 			/>
 		</authentication-provider>
	</authentication-manager>



</beans:beans>		 -->